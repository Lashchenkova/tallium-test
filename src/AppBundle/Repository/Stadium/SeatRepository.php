<?php

namespace AppBundle\Repository\Stadium;

use AppBundle\Entity\Stadium\Row;
use AppBundle\Entity\Stadium\Seat;
use AppBundle\Entity\Stadium\Sector;

/**
 * SeatRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SeatRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function findAllSeats()
    {
        $qb = $this->_em->createQueryBuilder();

        $qb
            ->select('seat')
            ->from(Seat::class, 'seat')
        ;

        return $qb;
    }

    /**
     * @param Sector|null $sector
     *
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function countFreeSeats(Sector $sector = null)
    {
        $qb = $this->_em->createQueryBuilder();

        $qb
            ->select('count(seat.id) as totalFreeCount')
            ->from(Seat::class, 'seat')
            ->where(
                $qb->expr()->eq('seat.isBooked', 0)
            )
        ;

        if($sector){
            $qb
                ->leftJoin('seat.row', 'row')
                ->where('row.sector = :sector')
                ->setParameter('sector', $sector);
        }

        return $qb->getQuery()->getSingleScalarResult();
    }

    /**
     * @param Sector $sector
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function findBySector(Sector $sector)
    {
        $qb = $this->_em->createQueryBuilder();

        $qb
            ->select('seat')
            ->from(Seat::class, 'seat')
            ->leftJoin('seat.row', 'row')
            ->where('row.sector = :sector')
            ->setParameter('sector', $sector)
        ;

        return $qb;
    }

    /**
     * @return array
     */
    public function findFreeSeatsForEachSector()
    {
        $qb = $this->_em->createQueryBuilder();

        $qb
            ->select('sect.sectorName as sector', 'count(seat) as freeSeats')
            ->from(Seat::class, 'seat')
            ->leftJoin('seat.row', 'row')
            ->leftJoin('row.sector', 'sect')
            ->groupBy('sect')
            ->where(
                $qb->expr()->eq('seat.isBooked', 0)
            )
        ;

        return $qb->getQuery()->getArrayResult();
    }

    /**
     * @param Row $row
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function findByRow(Row $row)
    {
        $qb = $this->_em->createQueryBuilder();

        $qb
            ->select('seat')
            ->from(Seat::class, 'seat')
            ->where('seat.row = :row')
            ->setParameter('row', $row)
        ;

        return $qb;
    }
}
